<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
  <mvc:annotation-driven />
  <aop:aspectj-autoproxy proxy-target-class="true" />
  <context:component-scan base-package="com.hoti.site" />
  <context:property-placeholder location="classpath:/META-INF/spring/application.properties"/>
  
  <!-- 定时任务 -->
  <task:executor id="executor" pool-size="5" />
  <task:scheduler id="scheduler" pool-size="5" />
  <task:annotation-driven executor="executor" scheduler="scheduler" />

  <!-- DRUID数据库连接管理 -->
  <bean id="dataSource" init-method="init" destroy-method="close" class="com.alibaba.druid.pool.DruidDataSource">
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <property name="initialSize" value="${jdbc.initialSize}" />
    <property name="minIdle" value="${jdbc.minIdle}" />
    <property name="maxActive" value="${jdbc.maxActive}" />
    <property name="maxWait" value="${jdbc.maxWait}" />
    <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
    <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
    <property name="validationQuery" value="${jdbc.validationQuery}" />
    <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
    <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
    <property name="testOnReturn" value="${jdbc.testOnReturn}" />
    <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />
    <property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" />
    <property name="filters" value="${jdbc.filters}" />
  </bean>
  
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="mapperLocations" value="${root.mapperLocations}" />
    <property name="configLocation" value="${root.configLocation}" />
  </bean>

  <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.hoti.site.db.dao" />
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
  </bean>

  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <!-- Create, Delete, Update -->
      <tx:method name="add*" propagation="REQUIRED" />
      <tx:method name="create*" propagation="REQUIRED" />
      <tx:method name="insert*" propagation="REQUIRED" />
      <tx:method name="update*" propagation="REQUIRED" />
      <tx:method name="merge*" propagation="REQUIRED" />
      <tx:method name="del*" propagation="REQUIRED" />
      <tx:method name="remove*" propagation="REQUIRED" />
      <tx:method name="put*" propagation="REQUIRED" />
      <tx:method name="unfollow*" propagation="REQUIRED" />
      <tx:method name="follow*" propagation="REQUIRED" />
      <!-- ReadOnly -->
      <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
      <tx:method name="query*" propagation="SUPPORTS" read-only="true" />
      <tx:method name="count*" propagation="SUPPORTS" read-only="true" />
      <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
      <tx:method name="list*" propagation="SUPPORTS" read-only="true" />
      <tx:method name="*" propagation="SUPPORTS" read-only="true" />
    </tx:attributes>
  </tx:advice>
  
  <aop:config>
    <aop:pointcut id="interceptorPointCuts" expression="${root.execution}" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />
  </aop:config>		
</beans>
